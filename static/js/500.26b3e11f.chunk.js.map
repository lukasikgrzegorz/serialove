{"version":3,"file":"static/js/500.26b3e11f.chunk.js","mappings":"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","sources":["webpack://serialove/./src/pages/FindSeries/FindSeries.module.css?b795","webpack://serialove/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","../node_modules/throttle-debounce/debounce.js","../node_modules/throttle-debounce/throttle.js","webpack://serialove/./src/components/FindSeriesItem/FindSeriesItem.module.css?9881","components/FindSeriesItem/FindSeriesItem.jsx","pages/FindSeries/FindSeries.jsx","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"FindSeries_wrapper__+UBgz\",\"input-holder\":\"FindSeries_input-holder__uAAGj\",\"hits-holder\":\"FindSeries_hits-holder__A1BJa\",\"list\":\"FindSeries_list__w38Mf\",\"item\":\"FindSeries_item__idKOn\"};","// extracted by mini-css-extract-plugin\nexport default {\"serachbar__input\":\"Searchbar_serachbar__input__N-qyc\"};","import React, { useEffect, useRef } from \"react\";\r\nimport css from \"./Searchbar.module.css\";\r\n\r\nconst Searchbar = (props) => {\r\n\tconst { startValue } = props;\r\n\tconst inputRef = useRef();\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst query = e.target.value;\r\n\t\tprops.onChange(query);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.value = startValue;\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<input\r\n\t\t\tref={inputRef}\r\n\t\t\tclassName={css[\"serachbar__input\"]}\r\n\t\t\ttype=\"text\"\r\n\t\t\tname=\"query\"\r\n\t\t\tplaceholder=\"Type here to search\"\r\n\t\t\tautoComplete=\"off\"\r\n\t\t\tonChange={handleChange}\r\n\t\t></input>\r\n\t);\r\n};\r\n\r\nexport default Searchbar;\r\n","/* eslint-disable no-undefined */\n\nimport throttle from './throttle.js';\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\nexport default function (delay, callback, options) {\n\tconst { atBegin = false } = options || {};\n\treturn throttle(delay, callback, { debounceMode: atBegin !== false });\n}\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nexport default function (delay, callback, options) {\n\tconst {\n\t\tnoTrailing = false,\n\t\tnoLeading = false,\n\t\tdebounceMode = undefined\n\t} = options || {};\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel(options) {\n\t\tconst { upcomingOnly = false } = options || {};\n\t\tclearExistingTimeout();\n\t\tcancelled = !upcomingOnly;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (!noLeading && debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`\n\t\t\t * and noLeading != true.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\tif (noLeading) {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode with noLeading, if `delay` time has\n\t\t\t\t * been exceeded, update `lastExec` and schedule `callback`\n\t\t\t\t * to execute after `delay` ms.\n\t\t\t\t */\n\t\t\t\tlastExec = Date.now();\n\t\t\t\tif (!noTrailing) {\n\t\t\t\t\ttimeoutID = setTimeout(debounceMode ? clear : exec, delay);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n\t\t\t\t * `callback`.\n\t\t\t\t */\n\t\t\t\texec();\n\t\t\t}\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"image-holder\":\"FindSeriesItem_image-holder__Jvbhd\",\"image\":\"FindSeriesItem_image__jCzCq\",\"data\":\"FindSeriesItem_data__Yno+L\",\"title\":\"FindSeriesItem_title__184ha\",\"rate\":\"FindSeriesItem_rate__5C-h5\"};","import { useState } from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport css from \"./FindSeriesItem.module.css\";\r\n\r\nconst FindSeriesItem = ({ name, image, votes }) => {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n\treturn (\r\n\t\t<li className={css[\"image-holder\"]}>\r\n\t\t\t<LazyLoadImage\r\n\t\t\t\tclassName={css[\"image\"]}\r\n\t\t\t\talt={name}\r\n\t\t\t\tsrc={\r\n\t\t\t\t\timage\r\n\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w200/${image}`\r\n\t\t\t\t\t\t: \"https://via.placeholder.com/200x300.png?text=SeriaLove\"\r\n\t\t\t\t}\r\n\t\t\t\tafterLoad={() => {\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<div className={css[\"data\"]}>\r\n\t\t\t\t\t{votes !== 0 ? (\r\n\t\t\t\t\t\t<p className={css[\"rate\"]}>{votes.toFixed(1)}</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className={css[\"rate\"]}></p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p className={css[\"title\"]}>{name}</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default FindSeriesItem;\r\n","import Loader from \"../../components/Loader/Loader\";\r\nimport css from \"./FindSeries.module.css\";\r\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\r\nimport { debounce } from \"throttle-debounce\";\r\nimport { fetchByQuery } from \"../../redux/operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getHits } from \"../../redux/selectors\";\r\nimport { getSerchError } from \"../../redux/selectors\";\r\nimport { getSerchIsLoading } from \"../../redux/selectors\";\r\nimport { clearHits } from \"../../redux/searchSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FindSeriesItem from \"../../components/FindSeriesItem/FindSeriesItem\";\r\n\r\nconst FindSeries = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst actualHits = useSelector(getHits);\r\n\tconst isLoading = useSelector(getSerchIsLoading);\r\n\tconst error = useSelector(getSerchError);\r\n\tconst [searchParams, setSearchParams] = useSearchParams();\r\n\tconst actualQuery = searchParams.get(\"query\");\r\n\r\n\tconst setActualQuery = (e) => {\r\n\t\tsetSearchParams({ query: e });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (actualQuery) {\r\n\t\t\tdispatch(fetchByQuery(actualQuery));\r\n\t\t}\r\n\t\tif (!actualQuery) {\r\n\t\t\tdispatch(clearHits());\r\n\t\t}\r\n\t}, [actualQuery]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && !error && <Loader />}\r\n\t\t\t<div className={css[\"wrapper\"]}>\r\n\t\t\t\t<div className={css[\"input-holder\"]}>\r\n\t\t\t\t\t<Searchbar startValue={actualQuery} onChange={debounce(500, setActualQuery)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={css[\"hits-holder\"]}>\r\n\t\t\t\t\t<ul className={css[\"list\"]}>\r\n\t\t\t\t\t\t{actualHits.map((hit) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tkey={hit.id}\r\n\t\t\t\t\t\t\t\t\tclassName={css[\"item\"]}\r\n\t\t\t\t\t\t\t\t\tto={`${hit.id}`}\r\n\t\t\t\t\t\t\t\t\tstate={{ from: `/findseries?query=${actualQuery}` }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<FindSeriesItem\r\n\t\t\t\t\t\t\t\t\t\tname={hit.name}\r\n\t\t\t\t\t\t\t\t\t\timage={hit.poster_path}\r\n\t\t\t\t\t\t\t\t\t\tvotes={hit.vote_average}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FindSeries;\r\n","export const getTrending = (state) => state.trending.items;\r\nexport const getTrendingIsLoading = (state) => state.trending.isLoading;\r\nexport const getTrendingError = (state) => state.trending.error;\r\nexport const getActualItem = (state) => state.trending.actualItem;\r\n\r\nexport const getHits = (state) => state.search.hits;\r\nexport const getSerchIsLoading = (state) => state.search.isLoading;\r\nexport const getSerchError = (state) => state.search.error;\r\n\r\nexport const getDetails = (state) => state.details.data;\r\nexport const getDetailsCast = (state) => state.details.cast;\r\nexport const getDetailsIsLoading = (state) => state.details.isLoading;\r\nexport const getDetailsError = (state) => state.details.error;\r\n\r\nexport const getWatched = (state) => state.myList.watched;\r\nexport const getQueque = (state) => state.myList.queque;\r\nexport const getToggle = (state) => state.myList.toggle;\r\n"],"names":["props","startValue","inputRef","useRef","useEffect","current","value","ref","className","css","type","name","placeholder","autoComplete","onChange","e","query","target","delay","callback","options","_ref$atBegin","atBegin","timeoutID","_ref$noTrailing","noTrailing","_ref$noLeading","noLeading","_ref$debounceMode","debounceMode","undefined","cancelled","lastExec","clearExistingTimeout","clearTimeout","wrapper","arguments_","self","this","elapsed","Date","now","exec","apply","clear","setTimeout","cancel","_ref2$upcomingOnly","upcomingOnly","throttle","image","votes","useState","isLoading","setIsLoading","LazyLoadImage","alt","src","afterLoad","toFixed","dispatch","useDispatch","actualHits","useSelector","getHits","getSerchIsLoading","error","getSerchError","useSearchParams","searchParams","setSearchParams","actualQuery","get","fetchByQuery","clearHits","Loader","debounce","map","hit","to","id","state","from","poster_path","vote_average","getTrending","trending","items","getTrendingIsLoading","getTrendingError","getActualItem","actualItem","search","hits","getDetails","details","data","getDetailsCast","cast","getDetailsIsLoading","getDetailsError","getWatched","myList","watched","getQueque","queque"],"sourceRoot":""}